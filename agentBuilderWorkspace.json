{"nodes":[{"width":98,"height":36,"id":"1","type":"rootNode","position":{"x":0,"y":0},"deletable":false,"data":{"nodeTypeName":"Root Node","nodeTypeDescription":"This is the Root Node, from which the rest of the graph is built.","label":"Root Node"},"positionAbsolute":{"x":0,"y":0}},{"width":167,"height":52,"id":"2","type":"sequenceNode","position":{"x":0,"y":100},"deletable":false,"data":{"isConnectableTarget":false,"nodeTypeName":"Sequence Node","nodeTypeDescription":"This is the starting point for your bot's Behavior Tree logic.","label":"Top Level Sequence Node","prompt":"","code":""},"positionAbsolute":{"x":0,"y":100},"selected":false,"dragging":false},{"width":163,"height":52,"id":"16","type":"conditionNode","position":{"x":-236.9577223614635,"y":234.02691153819762},"data":{"subType":null,"displayName":"Condition Node","displayDescription":"Condition nodes represent simple checks (e.g., 'is the gripper open?')","label":"Is there an entity nearby?","prompt":"","code":"protected override NodeStatus Execute(RG rgObject)\n{\n\tvar random = new System.Random();\n\tvar entities = rgObject.FindEntities();\n\tif (entities.Count > 0)\n\t{\n\t\tvar selectedIndex = random.Next(entities.Count);\n\t\tvar target = entities[selectedIndex];\n\t\tSetData(\"targetEntity\", target);\n\t\treturn NodeStatus.Success;\n\t}\n\n\treturn NodeStatus.Failure;\n}"},"positionAbsolute":{"x":-236.9577223614635,"y":234.02691153819762}},{"width":94,"height":52,"id":"17","type":"actionNode","position":{"x":42.77976957941745,"y":232.31073060604493},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Select Skill","prompt":"","code":"protected override NodeStatus Execute(RG rgObject)\n{\n\tvar target = GetData<RGStateEntity>(\"targetEntity\");\n\tvar selectedSkill = target.GetValueOrDefault(\"team\", 0) is 1 ? 1 : 0;\n\tSetData(\"selectedSkill\", selectedSkill);\n\treturn NodeStatus.Success;\n}"},"positionAbsolute":{"x":42.77976957941745,"y":232.31073060604493},"selected":false,"dragging":false},{"width":94,"height":52,"id":"18","type":"actionNode","position":{"x":207.53313906607124,"y":207.42610708983162},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Perform Skill","prompt":"","code":"public override NodeStatus Execute(RG rgObject)\n{\n\tvar selectedSkill = GetData<int>(\"selectedSkill\");\n\tvar target = GetData<RGStateEntity>(\"targetEntity\");\n\n\tvar targetPosition = target.position;\n\tvar action = new RGActionRequest(\"PerformSkill\", new()\n\t{\n\t\t[\"skillId\"] = selectedSkill,\n\t\t[\"targetId\"] = target[\"id\"],\n\t\t[\"xPosition\"] = targetPosition.x,\n\t\t[\"yPosition\"] = targetPosition.y,\n\t\t[\"zPosition\"] = targetPosition.z,\n\t});\n\trgObject.PerformAction(action);\n\treturn NodeStatus.Success;\n}"},"positionAbsolute":{"x":207.53313906607124,"y":207.42610708983162}}],"edges":[{"animated":true,"id":"e1-2","source":"1","target":"2","deletable":false},{"animated":true,"id":"16","source":"2","target":"16"},{"animated":true,"id":"17","source":"2","target":"17"},{"animated":true,"id":"18","source":"2","target":"18"}],"viewport":{"x":502.14538528200774,"y":186.27011802345055,"zoom":1.165378289975146}}